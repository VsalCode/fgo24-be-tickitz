basePath: /
definitions:
  dto.ForgotPasswordRequest:
    properties:
      code:
        type: string
      confirmNewPassword:
        type: string
      email:
        type: string
      newPassword:
        minLength: 6
        type: string
    required:
    - code
    - confirmNewPassword
    - email
    - newPassword
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - confirmPassword
    - email
    - password
    type: object
  dto.VerifyEmail:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.User:
    properties:
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      roles:
        type: string
    type: object
  utils.Response:
    properties:
      errors: {}
      message:
        type: string
      pageInfo: {}
      results: {}
      success:
        type: boolean
    type: object
info:
  contact: {}
  description: API for Cinevo app
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Get OTP
      parameters:
      - description: Email address to send verification code
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Forgot Password
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: User login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                results:
                  type: string
              type: object
      summary: Login a user
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                results:
                  $ref: '#/definitions/models.User'
              type: object
      summary: Register a new user
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password using verification code
      parameters:
      - description: Forgot password request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Reset Password
swagger: "2.0"
